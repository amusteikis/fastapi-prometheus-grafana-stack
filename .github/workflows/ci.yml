name: CI 

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  e2e-linux:
    name: End-to-End (Docker Compose)
    runs-on: 
      - ubuntu-latest
    timeout-minutes: 20 

    steps:
      - name: Checkout 
        uses: actions/checkout@v4
    
      - name: Prepare env and dummy secrets 
        run: |
          set -eux 
          # Secure paths
          mkdir -p alertmanager
          # Webhook dummy 
          echo "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX" > alertmanager/slack_webhook_url
          # .env 
          [[ -f .env]] || cat > .env <<'EOF'
          PROMETHEUS_URL=http://localhost:9090
          GRAFANA_URL=http://localhost:3000
          ALERTMANAGER_URL=http://localhost:9093
          GRAFANA_ADMIN_USER=admin
          GRAFANA_ADMIN_PASSWORD=Averro123!
          EOF 
          chmod +x start.sh || true
          chmod +x vaklidate.ps1 || true
      
      - name: Show Versions
        run: |
          docker --version
          docker-compose --version
          bash --version
      
      - name: Build & Start (Compose)
        run: |
          docker compose -f docker-compose.yml -p grafana-prometheus-stack up -d --remove-orphans 
      
      - name: Smoke Validation
        run: |
          ./validate.ps1
      
      - name: Compose PS 
        if: always()
        run: docker compose -f docker-compose.yml -p grafana-prometheus-stack ps
      
      - name: Collect Logs on failure
        if: failure()
        run: | 
          docker compose -f docker-compose.yml -p grafana-prometheus-stack logs --no-color > compose.log || true
      
      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose.log
      
      - name: Down stack 
        if: always()
        run: |
          docker compose -f docker-compose.yml -p grafana-prometheus-stack down -v 
