version: "3.8"

services:
  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - ./prometheus/rules:/etc/prometheus/rules
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin 
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --web.listen-address=:9093
      - --cluster.advertise-address=0.0.0.0:9094
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    restart: unless-stopped
    networks:
      - monitoring


  node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node-exporter
    pid: "host"
    command: 
    - --path.rootfs=/rootfs
    - --path.procfs=/host/proc
    - --path.sysfs=/host/sys
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+)($|/)
    volumes:
    - /:/rootfs:ro
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    ports:
      - "9100:9100"
    networks:
      - monitoring

  postgres:
     image: postgres
     container_name: postgres
     environment:
       POSTGRES_USER: user
       POSTGRES_PASSWORD: password
       POSTGRES_DB: mydb
     ports:
       - "5432:5432"     
     networks:
       - monitoring
     volumes:
       - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
     command: >
        postgres -c listen_addresses="*"

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/mydb?sslmode=disable"
    depends_on:
      - postgres
    networks:
      - monitoring

  api:
    image: tiangolo/uvicorn-gunicorn-fastapi:python3.9
    container_name: api
    volumes:
      - ./src:/app
      - ./requirements.txt:/app/requirements.txt
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - monitoring
    command:
      sh -c "pip install -r /app/requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000"

networks:
  monitoring:
    driver: bridge
volumes:
  grafana-data:
  prometheus-data: